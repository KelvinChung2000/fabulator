{
  "name": "fabulator",
  "displayName": "fabulator",
  "description": "VScode extension for FABulous eFPGA framework",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "FABulator Implementation",
      "properties": {
        "fabulator.toolPath.fabulous": {
          "type": "string",
          "default": "FABulous",
          "description": "Path or command for FABulous executable (fallback if not in project .env)."
        },
        "fabulator.toolPath.synthesis": {
          "type": "string",
          "default": "FABulous",
          "description": "Override synthesis tool path (defaults to main FABulous path)."
        },
        "fabulator.toolPath.placeRoute": {
          "type": "string",
          "default": "FABulous",
          "description": "Override place & route tool path (defaults to main FABulous path)."
        },
        "fabulator.toolPath.priority": {
          "type": "string",
          "enum": [
            "projectEnvFirst",
            "extensionConfigFirst",
            "systemEnvFirst"
          ],
          "default": "projectEnvFirst",
          "description": "Order of precedence for resolving tool path: project .env, extension config, or system PATH."
        },
        "fabulator.synthesis.args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Additional arguments to append for synthesis runs before file list."
        },
        "fabulator.placeRoute.args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Additional arguments to append for place & route runs before file list."
        },
        "fabulator.synthesis.env": {
          "type": "object",
          "default": {},
          "description": "Key/value environment variables to merge into synthesis process environment."
        },
        "fabulator.placeRoute.env": {
          "type": "object",
          "default": {},
          "description": "Key/value environment variables to merge into place & route process environment."
        },
        "fabulator.progress.notifications": {
          "type": "boolean",
          "default": true,
          "description": "Show VS Code progress notifications for synthesis and place & route executions."
        }
      }
    },
    "commands": [
      {
        "command": "fabulator.openFabric",
        "title": "Open Fabric",
        "category": "FABulator"
      },
      {
        "command": "fabulator.openDesign",
        "title": "Open Design",
        "category": "FABulator"
      },
      {
        "command": "fabulator.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "fabulator.selectFabricFile",
        "title": "Select Fabric File",
        "icon": "$(file-code)"
      },
      {
        "command": "fabulator.refreshSidebar",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "fabulator.highlightElement",
        "title": "Highlight in Viewer",
        "icon": "$(eye)"
      },
      {
        "command": "fabulator.startFABulous",
        "title": "Start FABulous CLI",
        "category": "FABulator",
        "icon": "$(terminal)"
      },
      {
        "command": "fabulator.addProject",
        "title": "Add FABulous Project Path",
        "category": "FABulator",
        "icon": "$(folder-opened)"
      },
      {
        "command": "fabulator.showFabric",
        "title": "Show Fabric (Smart)",
        "category": "FABulator",
        "icon": "$(preview)"
      },
      {
        "command": "fabulator.removeProject",
        "title": "Remove Project",
        "icon": "$(close)"
      },
      {
        "command": "fabulator.synth.addFile",
        "title": "Add Synthesis Source",
        "category": "FABulator",
        "icon": "$(add)"
      },
      {
        "command": "fabulator.synth.start",
        "title": "Start Synthesis",
        "category": "FABulator",
        "icon": "$(play)"
      },
      {
        "command": "fabulator.synth.removeFile",
        "title": "Remove Synthesis Source",
        "icon": "$(trash)"
      },
      {
        "command": "fabulator.pr.addFile",
        "title": "Add Place & Route Source",
        "category": "FABulator",
        "icon": "$(add)"
      },
      {
        "command": "fabulator.pr.start",
        "title": "Start Place & Route",
        "category": "FABulator",
        "icon": "$(rocket)"
      },
      {
        "command": "fabulator.pr.removeFile",
        "title": "Remove Place & Route Source",
        "icon": "$(trash)"
      }
    ],
    "views": {
      "fabulator-sidebar": [
        {
          "id": "fabulator.searchPanel",
          "name": "Search",
          "type": "webview",
          "when": "true"
        },
        {
          "id": "fabulator.fabricExplorer",
          "name": "Fabric Explorer",
          "when": "true"
        },
        {
          "id": "fabulator.projects",
          "name": "Projects",
          "when": "true"
        },
        {
          "id": "fabulator.synthesis",
          "name": "Synthesis",
          "when": "true"
        },
        {
          "id": "fabulator.placeRoute",
          "name": "Place & Route",
          "when": "true"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "fabulator-sidebar",
          "title": "FABulator",
          "icon": "$(circuit-board)"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "fabulator.openFabric",
          "title": "FABulator: Open Fabric"
        },
        {
          "command": "fabulator.openDesign",
          "title": "FABulator: Open Design"
        },
        {
          "command": "fabulator.startFABulous",
          "title": "FABulator: Start FABulous CLI"
        },
        {
          "command": "fabulator.addProject",
          "title": "FABulator: Add Project Path"
        },
        {
          "command": "fabulator.showFabric",
          "title": "FABulator: Show Fabric (Smart)"
        }
      ],
      "view/title": [
        {
          "command": "fabulator.selectFabricFile",
          "when": "view == fabulator.fabricExplorer",
          "group": "navigation@1"
        },
        {
          "command": "fabulator.refreshSidebar",
          "when": "view == fabulator.fabricExplorer",
          "group": "navigation@2"
        },
        {
          "command": "fabulator.addProject",
          "when": "view == fabulator.projects",
          "group": "navigation@1"
        },
        {
          "command": "fabulator.showFabric",
          "when": "view == fabulator.projects",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "fabulator.highlightElement",
          "when": "view == fabulator.fabricExplorer && viewItem =~ /^(tile|bel|switchMatrix|port|wire)$/",
          "group": "navigation"
        },
        {
          "command": "fabulator.removeProject",
          "when": "view == fabulator.projects && viewItem == fabulatorProject",
          "group": "inline"
        },
        {
          "command": "fabulator.synth.removeFile",
          "when": "view == fabulator.synthesis && viewItem == implFile",
          "group": "inline"
        },
        {
          "command": "fabulator.pr.removeFile",
          "when": "view == fabulator.placeRoute && viewItem == implFile",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run build:all",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "build:webview": "vite build --config vite.config.ts",
    "build:all": "npm run build:webview && npm run compile",
    "dev:webview": "vite --config vite.config.ts",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "test:unit": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:webview": "vitest run --config vitest.webview.config.ts",
    "test:webview:watch": "vitest --config vitest.webview.config.ts",
    "test:webview:ui": "vitest --ui --config vitest.webview.config.ts",
    "test:all": "npm run test:unit && npm run test:webview",
    "playwright:install": "npx playwright install --with-deps",
    "playwright:test": "playwright test",
    "playwright:update": "PLAYWRIGHT_UPDATE_SNAPSHOTS=1 playwright test",
    "visual:test": "npm run build:webview && playwright test",
    "playwright:info": "playwright test tests/info/geometry-info.spec.ts",
    "playwright:design": "playwright test tests/info/design-info.spec.ts",
    "geometry:csv2json": "node scripts/convert-geometry-csv.js tests/fixtures/test-geometry.csv src/webview/ui/geometry.json"
  },
  "dependencies": {
    "@pixi/unsafe-eval": "^7.4.3",
    "pixi-viewport": "^6.0.3",
    "pixi.js": "^8.8.3",
    "react": "^18.3.1",
    "react-dom": "^18.3.1"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/react": "^18.3.1",
    "@types/react-dom": "^18.3.1",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vitejs/plugin-react": "^4.3.3",
    "@vitest/ui": "^3.2.4",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "canvas": "^3.1.2",
    "eslint": "^9.25.1",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.16",
    "jsdom": "^26.0.0",
    "typescript": "^5.8.3",
    "vite": "^6.1.1",
    "vitest": "^3.2.4",
    "@playwright/test": "^1.48.2"
  }
}